D::\git\JAVA_TEST\JavaTest\out\production\DataTest>javap -v method.NativeMerchant
  Classfile /D:/git/JAVA_TEST/JavaTest/out/production/DataTest/method/NativeMerchant.class
    Last modified 2019-6-14; size 788 bytes
    MD5 checksum 2f1ca46275cb3792db8e2f385e281405
    Compiled from "NativeMerchant.java"
  public class method.NativeMerchant extends method.Merchant
    minor version: 0
    major version: 52
    flags: ACC_PUBLIC, ACC_SUPER
  Constant pool:
     #1 = Methodref          #5.#30         // method/Merchant."<init>":()V
     #2 = Methodref          #31.#32        // java/lang/Double.valueOf:(D)Ljava/lang/Double;
     #3 = Methodref          #4.#33         // method/NativeMerchant.getPrice:(DLmethod/Customer;)Ljava/lang/Double;
     #4 = Class              #34            // method/NativeMerchant
     #5 = Class              #35            // method/Merchant
     #6 = Utf8               <init>
     #7 = Utf8               ()V
     #8 = Utf8               Code
     #9 = Utf8               LineNumberTable
    #10 = Utf8               LocalVariableTable
    #11 = Utf8               this
    #12 = Utf8               Lmethod/NativeMerchant;
    #13 = Utf8               getPrice
    #14 = Utf8               (DLmethod/Customer;)Ljava/lang/Double;
    #15 = Utf8               price
    #16 = Utf8               D
    #17 = Utf8               customer
    #18 = Utf8               Lmethod/Customer;
    #19 = Utf8               add
    #20 = Utf8               (IIIII)I
    #21 = Utf8               a
    #22 = Utf8               I
    #23 = Utf8               b
    #24 = Utf8               c
    #25 = Utf8               d
    #26 = Utf8               f
    #27 = Utf8               (DLmethod/Customer;)Ljava/lang/Number;
    #28 = Utf8               SourceFile
    #29 = Utf8               NativeMerchant.java
    #30 = NameAndType        #6:#7          // "<init>":()V
    #31 = Class              #36            // java/lang/Double
    #32 = NameAndType        #37:#38        // valueOf:(D)Ljava/lang/Double;
    #33 = NameAndType        #13:#14        // getPrice:(DLmethod/Customer;)Ljava/lang/Double;
    #34 = Utf8               method/NativeMerchant
    #35 = Utf8               method/Merchant
    #36 = Utf8               java/lang/Double
    #37 = Utf8               valueOf
    #38 = Utf8               (D)Ljava/lang/Double;
  {
    public method.NativeMerchant();
      descriptor: ()V
      flags: ACC_PUBLIC
      Code:
        stack=1, locals=1, args_size=1
           0: aload_0
           1: invokespecial #1                  // Method method/Merchant."<init>":()V
           4: return
        LineNumberTable:
          line 3: 0
        LocalVariableTable:
          Start  Length  Slot  Name   Signature
              0       5     0  this   Lmethod/NativeMerchant;

    public java.lang.Double getPrice(double, method.Customer);
      descriptor: (DLmethod/Customer;)Ljava/lang/Double;
      flags: ACC_PUBLIC
      Code:
        stack=2, locals=4, args_size=3
           0: dconst_0
           1: invokestatic  #2                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
           4: areturn
        LineNumberTable:
          line 6: 0
        LocalVariableTable:
          Start  Length  Slot  Name   Signature
              0       5     0  this   Lmethod/NativeMerchant;
              0       5     1 price   D
              0       5     3 customer   Lmethod/Customer;

    public int add(int, int, int, int, int);
      descriptor: (IIIII)I
      flags: ACC_PUBLIC
      Code:
        stack=2, locals=6, args_size=6
           0: iload_1
           1: iload         5
           3: iadd
           4: ireturn
        LineNumberTable:
          line 10: 0
        LocalVariableTable:
          Start  Length  Slot  Name   Signature
              0       5     0  this   Lmethod/NativeMerchant;
              0       5     1     a   I
              0       5     2     b   I
              0       5     3     c   I
              0       5     4     d   I
              0       5     5     f   I

    public java.lang.Number getPrice(double, method.Customer);
      descriptor: (DLmethod/Customer;)Ljava/lang/Number;
      flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
      Code:
        stack=4, locals=4, args_size=3
           0: aload_0
           1: dload_1
           2: aload_3
           3: invokevirtual #3                  // Method getPrice:(DLmethod/Customer;)Ljava/lang/Double;
           6: areturn
        LineNumberTable:
          line 3: 0
        LocalVariableTable:
          Start  Length  Slot  Name   Signature
              0       7     0  this   Lmethod/NativeMerchant;
  }
  SourceFile: "NativeMerchant.java"

D:\git\JAVA_TEST\JavaTest\out\production\DataTest>javap -v method.NativeMerchant
Classfile /D:/git/JAVA_TEST/JavaTest/out/production/DataTest/method/NativeMerchant.class
  Last modified 2019-6-14; size 636 bytes
  MD5 checksum 5372e2548f07e93026cd1b3d8e5d3280
  Compiled from "NativeMerchant.java"
public class method.NativeMerchant extends method.Merchant
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #5.#22         // method/Merchant."<init>":()V
   #2 = Methodref          #23.#24        // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #3 = Methodref          #4.#25         // method/NativeMerchant.getPrice:(DLmethod/Customer;)Ljava/lang/Double;
   #4 = Class              #26            // method/NativeMerchant
   #5 = Class              #27            // method/Merchant
   #6 = Utf8               <init>
   #7 = Utf8               ()V
   #8 = Utf8               Code
   #9 = Utf8               LineNumberTable
  #10 = Utf8               LocalVariableTable
  #11 = Utf8               this
  #12 = Utf8               Lmethod/NativeMerchant;
  #13 = Utf8               getPrice
  #14 = Utf8               (DLmethod/Customer;)Ljava/lang/Double;
  #15 = Utf8               price
  #16 = Utf8               D
  #17 = Utf8               customer
  #18 = Utf8               Lmethod/Customer;
  #19 = Utf8               (DLmethod/Customer;)Ljava/lang/Number;
  #20 = Utf8               SourceFile
  #21 = Utf8               NativeMerchant.java
  #22 = NameAndType        #6:#7          // "<init>":()V
  #23 = Class              #28            // java/lang/Double
  #24 = NameAndType        #29:#30        // valueOf:(D)Ljava/lang/Double;
  #25 = NameAndType        #13:#14        // getPrice:(DLmethod/Customer;)Ljava/lang/Double;
  #26 = Utf8               method/NativeMerchant
  #27 = Utf8               method/Merchant
  #28 = Utf8               java/lang/Double
  #29 = Utf8               valueOf
  #30 = Utf8               (D)Ljava/lang/Double;
{
  public method.NativeMerchant();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method method/Merchant."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;

  public java.lang.Double getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Double;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: dconst_0
         1: invokestatic  #2                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         4: areturn
      LineNumberTable:
        line 6: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;
            0       5     1 price   D
            0       5     3 customer   Lmethod/Customer;

  public java.lang.Number getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Number;
    flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: dload_1
         2: aload_3
         3: invokevirtual #3                  // Method getPrice:(DLmethod/Customer;)Ljava/lang/Double;
         6: areturn
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lmethod/NativeMerchant;
}
SourceFile: "NativeMerchant.java"

D:\git\JAVA_TEST\JavaTest\out\production\DataTest>javap -v method.Merchant
Classfile /D:/git/JAVA_TEST/JavaTest/out/production/DataTest/method/Merchant.class
  Last modified 2019-6-14; size 610 bytes
  MD5 checksum 52ca5b989f1756273cd53b7d7e690a78
  Compiled from "Merchant.java"
public class method.Merchant
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #7.#24         // java/lang/Object."<init>":()V
   #2 = InterfaceMethodref #25.#26        // method/Customer.isVIP:()Z
   #3 = Double             0.5d
   #5 = Methodref          #27.#28        // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #6 = Class              #29            // method/Merchant
   #7 = Class              #30            // java/lang/Object
   #8 = Utf8               <init>
   #9 = Utf8               ()V
  #10 = Utf8               Code
  #11 = Utf8               LineNumberTable
  #12 = Utf8               LocalVariableTable
  #13 = Utf8               this
  #14 = Utf8               Lmethod/Merchant;
  #15 = Utf8               getPrice
  #16 = Utf8               (DLmethod/Customer;)Ljava/lang/Number;
  #17 = Utf8               price
  #18 = Utf8               D
  #19 = Utf8               customer
  #20 = Utf8               Lmethod/Customer;
  #21 = Utf8               StackMapTable
  #22 = Utf8               SourceFile
  #23 = Utf8               Merchant.java
  #24 = NameAndType        #8:#9          // "<init>":()V
  #25 = Class              #31            // method/Customer
  #26 = NameAndType        #32:#33        // isVIP:()Z
  #27 = Class              #34            // java/lang/Double
  #28 = NameAndType        #35:#36        // valueOf:(D)Ljava/lang/Double;
  #29 = Utf8               method/Merchant
  #30 = Utf8               java/lang/Object
  #31 = Utf8               method/Customer
  #32 = Utf8               isVIP
  #33 = Utf8               ()Z
  #34 = Utf8               java/lang/Double
  #35 = Utf8               valueOf
  #36 = Utf8               (D)Ljava/lang/Double;
{
  public method.Merchant();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/Merchant;

  public java.lang.Number getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Number;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_3
         1: invokeinterface #2,  1            // InterfaceMethod method/Customer.isVIP:()Z
         6: ifeq          18
         9: dload_1
        10: ldc2_w        #3                  // double 0.5d
        13: dmul
        14: invokestatic  #5                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        17: areturn
        18: dload_1
        19: invokestatic  #5                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        22: areturn
      LineNumberTable:
        line 5: 0
        line 6: 9
        line 7: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lmethod/Merchant;
            0      23     1 price   D
            0      23     3 customer   Lmethod/Customer;
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
}
SourceFile: "Merchant.java"

D:\git\JAVA_TEST\JavaTest\out\production\DataTest>javap -v method.NativeMerchant
Classfile /D:/git/JAVA_TEST/JavaTest/out/production/DataTest/method/NativeMerchant.class
  Last modified 2019-6-14; size 795 bytes
  MD5 checksum 25283fcf729cccaf78191017d23539d9
  Compiled from "NativeMerchant.java"
public class method.NativeMerchant extends method.Merchant
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #5.#30         // method/Merchant."<init>":()V
   #2 = Methodref          #31.#32        // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #3 = Methodref          #4.#33         // method/NativeMerchant.getPrice:(DLmethod/Customer;)Ljava/lang/Double;
   #4 = Class              #34            // method/NativeMerchant
   #5 = Class              #35            // method/Merchant
   #6 = Utf8               <init>
   #7 = Utf8               ()V
   #8 = Utf8               Code
   #9 = Utf8               LineNumberTable
  #10 = Utf8               LocalVariableTable
  #11 = Utf8               this
  #12 = Utf8               Lmethod/NativeMerchant;
  #13 = Utf8               getPrice
  #14 = Utf8               (DLmethod/Customer;)Ljava/lang/Double;
  #15 = Utf8               price
  #16 = Utf8               D
  #17 = Utf8               customer
  #18 = Utf8               Lmethod/Customer;
  #19 = Utf8               add
  #20 = Utf8               (IIIII)I
  #21 = Utf8               a
  #22 = Utf8               I
  #23 = Utf8               b
  #24 = Utf8               c
  #25 = Utf8               d
  #26 = Utf8               f
  #27 = Utf8               (DLmethod/Customer;)Ljava/lang/Number;
  #28 = Utf8               SourceFile
  #29 = Utf8               NativeMerchant.java
  #30 = NameAndType        #6:#7          // "<init>":()V
  #31 = Class              #36            // java/lang/Double
  #32 = NameAndType        #37:#38        // valueOf:(D)Ljava/lang/Double;
  #33 = NameAndType        #13:#14        // getPrice:(DLmethod/Customer;)Ljava/lang/Double;
  #34 = Utf8               method/NativeMerchant
  #35 = Utf8               method/Merchant
  #36 = Utf8               java/lang/Double
  #37 = Utf8               valueOf
  #38 = Utf8               (D)Ljava/lang/Double;
{
  public method.NativeMerchant();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method method/Merchant."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;

  public java.lang.Double getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Double;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: dconst_0
         1: invokestatic  #2                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         4: areturn
      LineNumberTable:
        line 6: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;
            0       5     1 price   D
            0       5     3 customer   Lmethod/Customer;

  public int add(int, int, int, int, int);
    descriptor: (IIIII)I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: iload_1
         1: iload_2
         2: iadd
         3: iload_3
         4: iadd
         5: iload         4
         7: iadd
         8: iload         5
        10: iadd
        11: ireturn
      LineNumberTable:
        line 10: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lmethod/NativeMerchant;
            0      12     1     a   I
            0      12     2     b   I
            0      12     3     c   I
            0      12     4     d   I
            0      12     5     f   I

  public java.lang.Number getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Number;
    flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: dload_1
         2: aload_3
         3: invokevirtual #3                  // Method getPrice:(DLmethod/Customer;)Ljava/lang/Double;
         6: areturn
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lmethod/NativeMerchant;
}
SourceFile: "NativeMerchant.java"

D:\git\JAVA_TEST\JavaTest\out\production\DataTest>clear


D:\git\JAVA_TEST\JavaTest\out\production\DataTest>javap -v method.NativeMerchant
Classfile /D:/git/JAVA_TEST/JavaTest/out/production/DataTest/method/NativeMerchant.class
  Last modified 2019-6-14; size 788 bytes
  MD5 checksum 2f1ca46275cb3792db8e2f385e281405
  Compiled from "NativeMerchant.java"
public class method.NativeMerchant extends method.Merchant
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #5.#30         // method/Merchant."<init>":()V
   #2 = Methodref          #31.#32        // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #3 = Methodref          #4.#33         // method/NativeMerchant.getPrice:(DLmethod/Customer;)Ljava/lang/Double;
   #4 = Class              #34            // method/NativeMerchant
   #5 = Class              #35            // method/Merchant
   #6 = Utf8               <init>
   #7 = Utf8               ()V
   #8 = Utf8               Code
   #9 = Utf8               LineNumberTable
  #10 = Utf8               LocalVariableTable
  #11 = Utf8               this
  #12 = Utf8               Lmethod/NativeMerchant;
  #13 = Utf8               getPrice
  #14 = Utf8               (DLmethod/Customer;)Ljava/lang/Double;
  #15 = Utf8               price
  #16 = Utf8               D
  #17 = Utf8               customer
  #18 = Utf8               Lmethod/Customer;
  #19 = Utf8               add
  #20 = Utf8               (IIIII)I
  #21 = Utf8               a
  #22 = Utf8               I
  #23 = Utf8               b
  #24 = Utf8               c
  #25 = Utf8               d
  #26 = Utf8               f
  #27 = Utf8               (DLmethod/Customer;)Ljava/lang/Number;
  #28 = Utf8               SourceFile
  #29 = Utf8               NativeMerchant.java
  #30 = NameAndType        #6:#7          // "<init>":()V
  #31 = Class              #36            // java/lang/Double
  #32 = NameAndType        #37:#38        // valueOf:(D)Ljava/lang/Double;
  #33 = NameAndType        #13:#14        // getPrice:(DLmethod/Customer;)Ljava/lang/Double;
  #34 = Utf8               method/NativeMerchant
  #35 = Utf8               method/Merchant
  #36 = Utf8               java/lang/Double
  #37 = Utf8               valueOf
  #38 = Utf8               (D)Ljava/lang/Double;
{
  public method.NativeMerchant();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method method/Merchant."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;

  public java.lang.Double getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Double;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: dconst_0
         1: invokestatic  #2                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         4: areturn
      LineNumberTable:
        line 6: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;
            0       5     1 price   D
            0       5     3 customer   Lmethod/Customer;

  public int add(int, int, int, int, int);
    descriptor: (IIIII)I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: iload_1
         1: iload         5
         3: iadd
         4: ireturn
      LineNumberTable:
        line 10: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;
            0       5     1     a   I
            0       5     2     b   I
            0       5     3     c   I
            0       5     4     d   I
            0       5     5     f   I

  public java.lang.Number getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Number;
    flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: dload_1
         2: aload_3
         3: invokevirtual #3                  // Method getPrice:(DLmethod/Customer;)Ljava/lang/Double;
         6: areturn
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lmethod/NativeMerchant;
}
SourceFile: "NativeMerchant.java"

D:\git\JAVA_TEST\JavaTest\out\production\DataTest>clran
'clran' 不是内部或外部命令，也不是可运行的程序
或批处理文件。

D:\git\JAVA_TEST\JavaTest\out\production\DataTest>clean
'clean' 不是内部或外部命令，也不是可运行的程序
或批处理文件。

D:\git\JAVA_TEST\JavaTest\out\production\DataTest>clear


D:\git\JAVA_TEST\JavaTest\out\production\DataTest>javap -v method.NativeMerchant
Classfile /D:/git/JAVA_TEST/JavaTest/out/production/DataTest/method/NativeMerchant.class
  Last modified 2019-6-14; size 788 bytes
  MD5 checksum 2f1ca46275cb3792db8e2f385e281405
  Compiled from "NativeMerchant.java"
public class method.NativeMerchant extends method.Merchant
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #5.#30         // method/Merchant."<init>":()V
   #2 = Methodref          #31.#32        // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #3 = Methodref          #4.#33         // method/NativeMerchant.getPrice:(DLmethod/Customer;)Ljava/lang/Double;
   #4 = Class              #34            // method/NativeMerchant
   #5 = Class              #35            // method/Merchant
   #6 = Utf8               <init>
   #7 = Utf8               ()V
   #8 = Utf8               Code
   #9 = Utf8               LineNumberTable
  #10 = Utf8               LocalVariableTable
  #11 = Utf8               this
  #12 = Utf8               Lmethod/NativeMerchant;
  #13 = Utf8               getPrice
  #14 = Utf8               (DLmethod/Customer;)Ljava/lang/Double;
  #15 = Utf8               price
  #16 = Utf8               D
  #17 = Utf8               customer
  #18 = Utf8               Lmethod/Customer;
  #19 = Utf8               add
  #20 = Utf8               (IIIII)I
  #21 = Utf8               a
  #22 = Utf8               I
  #23 = Utf8               b
  #24 = Utf8               c
  #25 = Utf8               d
  #26 = Utf8               f
  #27 = Utf8               (DLmethod/Customer;)Ljava/lang/Number;
  #28 = Utf8               SourceFile
  #29 = Utf8               NativeMerchant.java
  #30 = NameAndType        #6:#7          // "<init>":()V
  #31 = Class              #36            // java/lang/Double
  #32 = NameAndType        #37:#38        // valueOf:(D)Ljava/lang/Double;
  #33 = NameAndType        #13:#14        // getPrice:(DLmethod/Customer;)Ljava/lang/Double;
  #34 = Utf8               method/NativeMerchant
  #35 = Utf8               method/Merchant
  #36 = Utf8               java/lang/Double
  #37 = Utf8               valueOf
  #38 = Utf8               (D)Ljava/lang/Double;
{
  public method.NativeMerchant();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method method/Merchant."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;

  public java.lang.Double getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Double;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: dconst_0
         1: invokestatic  #2                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         4: areturn
      LineNumberTable:
        line 6: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;
            0       5     1 price   D
            0       5     3 customer   Lmethod/Customer;

  public int add(int, int, int, int, int);
    descriptor: (IIIII)I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: iload_1
         1: iload         5
         3: iadd
         4: ireturn
      LineNumberTable:
        line 10: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lmethod/NativeMerchant;
            0       5     1     a   I
            0       5     2     b   I
            0       5     3     c   I
            0       5     4     d   I
            0       5     5     f   I

  public java.lang.Number getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Number;
    flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: dload_1
         2: aload_3
         3: invokevirtual #3                  // Method getPrice:(DLmethod/Customer;)Ljava/lang/Double;
         6: areturn
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lmethod/NativeMerchant;
}
SourceFile: "NativeMerchant.java"

D:\git\JAVA_TEST\JavaTest\out\production\DataTest>javap -v method.Merchant
Classfile /D:/git/JAVA_TEST/JavaTest/out/production/DataTest/method/Merchant.class
  Last modified 2019-6-14; size 743 bytes
  MD5 checksum 3979b2d3892dac36eaf6e06e629e2e4e
  Compiled from "Merchant.java"
public class method.Merchant
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #10.#31        // java/lang/Object."<init>":()V
   #2 = String             #32            // name-1
   #3 = Fieldref           #9.#33         // method/Merchant.name:Ljava/lang/String;
   #4 = String             #34            // name-2
   #5 = InterfaceMethodref #35.#36        // method/Customer.isVIP:()Z
   #6 = Double             0.5d
   #8 = Methodref          #37.#38        // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #9 = Class              #39            // method/Merchant
  #10 = Class              #40            // java/lang/Object
  #11 = Utf8               name
  #12 = Utf8               Ljava/lang/String;
  #13 = Utf8               <init>
  #14 = Utf8               ()V
  #15 = Utf8               Code
  #16 = Utf8               LineNumberTable
  #17 = Utf8               LocalVariableTable
  #18 = Utf8               this
  #19 = Utf8               Lmethod/Merchant;
  #20 = Utf8               getPrice
  #21 = Utf8               (DLmethod/Customer;)Ljava/lang/Number;
  #22 = Utf8               price
  #23 = Utf8               D
  #24 = Utf8               customer
  #25 = Utf8               Lmethod/Customer;
  #26 = Utf8               name2
  #27 = Utf8               StackMapTable
  #28 = Class              #41            // java/lang/String
  #29 = Utf8               SourceFile
  #30 = Utf8               Merchant.java
  #31 = NameAndType        #13:#14        // "<init>":()V
  #32 = Utf8               name-1
  #33 = NameAndType        #11:#12        // name:Ljava/lang/String;
  #34 = Utf8               name-2
  #35 = Class              #42            // method/Customer
  #36 = NameAndType        #43:#44        // isVIP:()Z
  #37 = Class              #45            // java/lang/Double
  #38 = NameAndType        #46:#47        // valueOf:(D)Ljava/lang/Double;
  #39 = Utf8               method/Merchant
  #40 = Utf8               java/lang/Object
  #41 = Utf8               java/lang/String
  #42 = Utf8               method/Customer
  #43 = Utf8               isVIP
  #44 = Utf8               ()Z
  #45 = Utf8               java/lang/Double
  #46 = Utf8               valueOf
  #47 = Utf8               (D)Ljava/lang/Double;
{
  public method.Merchant();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: ldc           #2                  // String name-1
         7: putfield      #3                  // Field name:Ljava/lang/String;
        10: return
      LineNumberTable:
        line 3: 0
        line 4: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lmethod/Merchant;

  public java.lang.Number getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Number;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=3
         0: ldc           #4                  // String name-2
         2: astore        4
         4: aload_3
         5: invokeinterface #5,  1            // InterfaceMethod method/Customer.isVIP:()Z
        10: ifeq          22
        13: dload_1
        14: ldc2_w        #6                  // double 0.5d
        17: dmul
        18: invokestatic  #8                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        21: areturn
        22: dload_1
        23: invokestatic  #8                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        26: areturn
      LineNumberTable:
        line 7: 0
        line 8: 4
        line 9: 13
        line 10: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lmethod/Merchant;
            0      27     1 price   D
            0      27     3 customer   Lmethod/Customer;
            4      23     4 name2   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class java/lang/String ]
}
SourceFile: "Merchant.java"

D:\git\JAVA_TEST\JavaTest\out\production\DataTest>clear


D:\git\JAVA_TEST\JavaTest\out\production\DataTest>javap -v method.Merchant
Classfile /D:/git/JAVA_TEST/JavaTest/out/production/DataTest/method/Merchant.class
  Last modified 2019-6-14; size 731 bytes
  MD5 checksum f73d6ad124bf8eec297082a4031c58fe
  Compiled from "Merchant.java"
public class method.Merchant
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #9.#30         // java/lang/Object."<init>":()V
   #2 = String             #31            // name-1
   #3 = Fieldref           #8.#32         // method/Merchant.name:Ljava/lang/String;
   #4 = InterfaceMethodref #33.#34        // method/Customer.isVIP:()Z
   #5 = Double             0.5d
   #7 = Methodref          #35.#36        // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #8 = Class              #37            // method/Merchant
   #9 = Class              #38            // java/lang/Object
  #10 = Utf8               name
  #11 = Utf8               Ljava/lang/String;
  #12 = Utf8               <init>
  #13 = Utf8               ()V
  #14 = Utf8               Code
  #15 = Utf8               LineNumberTable
  #16 = Utf8               LocalVariableTable
  #17 = Utf8               this
  #18 = Utf8               Lmethod/Merchant;
  #19 = Utf8               getPrice
  #20 = Utf8               (DLmethod/Customer;)Ljava/lang/Number;
  #21 = Utf8               price
  #22 = Utf8               D
  #23 = Utf8               customer
  #24 = Utf8               Lmethod/Customer;
  #25 = Utf8               name2
  #26 = Utf8               StackMapTable
  #27 = Class              #39            // java/lang/String
  #28 = Utf8               SourceFile
  #29 = Utf8               Merchant.java
  #30 = NameAndType        #12:#13        // "<init>":()V
  #31 = Utf8               name-1
  #32 = NameAndType        #10:#11        // name:Ljava/lang/String;
  #33 = Class              #40            // method/Customer
  #34 = NameAndType        #41:#42        // isVIP:()Z
  #35 = Class              #43            // java/lang/Double
  #36 = NameAndType        #44:#45        // valueOf:(D)Ljava/lang/Double;
  #37 = Utf8               method/Merchant
  #38 = Utf8               java/lang/Object
  #39 = Utf8               java/lang/String
  #40 = Utf8               method/Customer
  #41 = Utf8               isVIP
  #42 = Utf8               ()Z
  #43 = Utf8               java/lang/Double
  #44 = Utf8               valueOf
  #45 = Utf8               (D)Ljava/lang/Double;
{
  public method.Merchant();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: ldc           #2                  // String name-1
         7: putfield      #3                  // Field name:Ljava/lang/String;
        10: return
      LineNumberTable:
        line 3: 0
        line 4: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lmethod/Merchant;

  public java.lang.Number getPrice(double, method.Customer);
    descriptor: (DLmethod/Customer;)Ljava/lang/Number;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=3
         0: ldc           #2                  // String name-1
         2: astore        4
         4: aload_3
         5: invokeinterface #4,  1            // InterfaceMethod method/Customer.isVIP:()Z
        10: ifeq          22
        13: dload_1
        14: ldc2_w        #5                  // double 0.5d
        17: dmul
        18: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        21: areturn
        22: dload_1
        23: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        26: areturn
      LineNumberTable:
        line 7: 0
        line 8: 4
        line 9: 13
        line 10: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lmethod/Merchant;
            0      27     1 price   D
            0      27     3 customer   Lmethod/Customer;
            4      23     4 name2   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class java/lang/String ]
}
SourceFile: "Merchant.java"

